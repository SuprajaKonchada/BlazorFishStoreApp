@page "/fish/edit/{Id:int}"
@using BlazorFishStoreApp.Services
@using BlazorFishStoreApp.Models
@inject FishService FishService
@inject NavigationManager NavigationManager

<h3>Edit Fish</h3>

<EditForm Model="fish" OnValidSubmit="HandleValidSubmit" method="post" FormName="EditForm">
    <DataAnnotationsValidator />
    <div class="form-group">
        <label>Name <span class="text-danger">*</span></label>
        <InputText class="form-control" @bind-Value="fish.Name" />
        <ValidationMessage For="@(() => fish.Name)" class="text-danger" />
    </div>

    <div class="form-group">
        <label>Age (in months) <span class="text-danger">*</span></label>
        <InputNumber class="form-control" @bind-Value="fish.Age" />
        <ValidationMessage For="@(() => fish.Age)" class="text-danger" />
    </div>

    <div class="form-group">
        <label>Price (in rupees) <span class="text-danger">*</span></label>
        <InputNumber class="form-control" @bind-Value="fish.Price" />
        <ValidationMessage For="@(() => fish.Price)" class="text-danger" />
    </div>

    <div class="form-group">
        <label>Lifespan (in years) <span class="text-danger">*</span></label>
        <InputNumber class="form-control" @bind-Value="fish.Lifespan" />
        <ValidationMessage For="@(() => fish.Lifespan)" class="text-danger" />
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {

    [Parameter]
    public int Id { get; set; }

    private Fish fish = new Fish();

    /// <summary>
    /// Initializes the component asynchronously and retrieves the fish details by its ID.
    /// </summary>
    protected override async Task OnInitializedAsync()
    {
        fish = await FishService.GetFishByIdAsync(Id);
    }

    /// <summary>
    /// Handles the form submission after validation and updates the fish details.
    /// Navigates back to the fish list page upon successful update.
    /// </summary>
    private async Task HandleValidSubmit()
    {
        await FishService.UpdateFishAsync(fish);
        NavigationManager.NavigateTo("/fish");
    }
}
